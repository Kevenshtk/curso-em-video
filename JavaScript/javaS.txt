NODE.JS
console.log(texto): mostrar textos

FUNÇÃO

var texto = "Hello World"; declarar a variavel

function imprimir(nome da função) (texto(parametro)) {
    console.log(texto)
}

imprimir(texto) chama a função

VARIAVEIS

ARRAY
var estados = ["Rio de Janeiro", "São Paulo", "Bahia"];

console.log(estados[0]); para mostrar uma posição do array


UNDEFINED
É tanto o nome de um tipo quanto o nome do único valor que esse tipo pode receber

var nome;
console.log(nome); //vai imprimir undefined


NaN é o resultado de uma operação matemática que falhou.


NULL
adia intencionalmente ou não atribuir um valor a variavel
var nome  = null;
console.log(nome);
// vai imprimir null

null é considerado 0 pelo JavaScript

CONSTANTE

const url = "https://www.devmedia.com.br/";

CONVERSÃO PARA NUMBER

true = 1
false = 0
null = 0
undedfined = NaN

parseInt(var/texto) converte de String para Number

OPERADORES

+=, -=, *=, /= ou %=

var preco = 20;
preco += 1; IGUAL preco = preco + 1


OPERADORES DE COMPARAÇÃO

==, !=, <, >, <=, >=, === e !==

=== : comparar se os dois valores são iguais tanto em valor quanto em tipo


OPERADORES LÓGICOS

true &&(E) false // false
false ||(OU) false // false
!true // false


OBJETO LITERAL
Usado quanto precisamos agrupar dados de um mesmo domínio

var produto = {
    id(chave): 9(valor),
    nome: "Cafeteira Elétrica",
    valor: 99.00
};

console.log(aula(nome_obj).id(dado)); para mostrar o valor do objeto


COLEÇÃO DE OBJETOS

var colecao_disciplinas = [
    { id: 1, nome: "Português",     carga_horaria: 240 }, // índice 0
    { id: 2, nome: "Matemática",    carga_horaria: 220 }, // índice 1
    { id: 3, nome: "História",      carga_horaria: 160 }, // índice 2
    { id: 4, nome: "Geografia",     carga_horaria: 140 }, // índice 3
    { id: 5, nome: "Química",       carga_horaria: 160 }, // índice 4
    { id: 6, nome: "Física",        carga_horaria: 150 }, // índice 5
    { id: 7, nome: "Inglês",        carga_horaria: 120 }  // índice 6
];

console.log(colecao_disciplinas(nome_colecao)[0](posição).id(valor) ); // 1


.length: retorna a quantidade seja de letras ou de objetos

Math.random(): redorna um número aleatório entre 0 e <1(não incluido)

Math.floor(): arredonda um número para o menor número inteiro mais próximo

.getMonth(): retorna o mês atual, que vai de 0 à 11

IF E AS ANOMALIAS

x = ""; é convertida para false
y = 0; é convertida para false

if(x == y) false com false = true{
	x e y são iguais;   ela entra aqui
} else{
	x e y são diferentes;
}


x = 1; é convertida para false
y = true; é convertida para false

if(x == y) true com true = true{
	x e y são iguais;   ela entra aqui
} else{
	x e y são diferentes;
}


IF TERNÁRIO

Comum
var status = "";
if ( nota > 7 ) {
status = "Aprovado";
}
else {
 status = "Reprovado";
}

Ternário

var status = nota > 7 ?(IF) "Aprovado" :(ELSE) "Reprovado";

Mútiplas condições

var mensagem = (mes == 11 || mes == 12) ? "Promoção" : "Preço normal";



CURTO_CIRCUITO

só aceita o valor true
ele não possui o esle

var aprovado = true;

aprovado(true) && console.log("Parabéns"); 


//Declaração da constante nome
const nome = 'Camila';

//Aqui é verificado se o nome possui ao menos um caractere
//Retorna true se possuir e false caso contrário
const nomeValido = nome.length > 0;

//Imprime o nome no console se for diferente de vazio(false)
nomeValido(true) && console.log(nomeValido);



SWITCH

var produto = "Smartphone";

switch(produto)
{
    case "Smartphone":
    case "Celular":
    case "Telefone":
        console.log("Produto: Smartphone");
        break;
    case "TV":
        console.log("Produto: TV");
        break;
    default:
        console.log("Produto inválido");
        break;
}


INPUT

1) instalação do plugin

Abra a pasta do projeto -> No terminal - npm init -y -> npm install readline-sync

2) configurando o plugin

Abra o arquivo package.json -> adicione "type": "module", de baixo de "description": "",

3) testando

import entradaDados from 'readline-sync'; importa o plugin

const nome = entradaDados.question('Digite seu nome: '); input

console.log('Olá, '+nome);

No termial entra na pasta do projeto -> node nomeProjeto.js - para executar o código



Tratando números

import entradaDados from 'readline-sync';

console.log("Calculadora de soma entre x e y: \n")

let x = entradaDados.question("Informe o valor de x: ")
let y = entradaDados.question("Informe o valor de y: ")

let soma = Number(x) + Number(y);

console.log(x+" + "+y+" = "+soma);

Number() : converte o valor de string para number, só é usada quando é preciso fazer
uma soma









WEB

alert('msg') mostra um alerta
confirm('msg') mostra um alerta de confirma
prompt('msg') trás um campo texto

`\u{1F449}` para colocar emojis no js U+1F449(código normal)

Data do Sitema
new Date() var.getDay(diaSem)() para pegar data e hora do sistema

document.write(writeln)(`msg`) mostra a msg na tela

var.focus() faz o cursor do campo voltar a piscar

.createElement('tag') cria um elemento HTML pelo js
.setAttribute('id,class, src'(tipo do atributo), 'nome/file'(valor))
.appendChild(elemento) anexa algo a um elemento

ex: var img = document.querySelector('#imagem')
    var i = document.createElement('img')
    i.setAttribute('src', 'img.jpg')
    img.appendChild(i)

ex(select): let i = document.createElement('option')
        i.text = `Valor ${num.value} adicionado.`
        lista.appendChild(i)

ex: img.setAttribute('id', 'foto')

var.src = 'local' insere imagens pelo js(com tag img no HTML)


Converter váriaveis

Number.parseInt(n)interio
Number.parseFloat(n)real
Number(n.value)o JS que idetifica real ou interio

String(n)
n.toString()
`msg ${n}` template string(Só funciona com crase)

métodos
s.length quantos caracteres tem na string
s.toUpperCase() deixa os caracteres em maiúsculo
s.toLowerCase() deixa os caracteres em minúsculo

.toFixed(2) mostra as casa depois do .
.replace('.', ',') troca o . por ,


Operadores
aritméticos
+
-
*
/
% é o resto da divisão 
** é a potência 5**2=25


atribuição 
n+=x serve para simplificar n=n+x
n++ n-- serve para incremento e decremento, simplifica n=n+(-)1

relacionais (true, false)
>
<
>=
<=
== igual
!= diferente
=== identico(tem q ser msm valor e o tipo)
!== diferencia pelo tipo


lógicos
! negação
&& e (um e outro)
|| ou (um ou outro)

ternário
? teste 
: resultado

teste ? true : false
ex: m > 5 ? 'aprovado':'reprovado'

Seletores
.getElementsByTagName('')[0(PRI),1(SEG)(seleciona algo por tag)]

.innerText  só o texto
.innerHTML  o texto com as formatações

.getElementById('')
.getElementsByName('')
.getElementsByClassName('')
.querySelector('div#msg(CSS)') faz por elementos CSS

Função
function nomeFun(){
     bloco
}

click html
onclick"nome()" quando clicar
onmouseenter="" quando o mouse entra
onmouseout="" quando o mouse sair

click JS
 a.addEventListener('click', clicar)
 a.addEventListener('mouseenter', entrar)
 a.addEventListener('mouseout', sair)

carregar html
onload"nome()" quando carregar o elemento html

Estilo em JS
var.style.textAlign = 'center'

Array
var nome = [4, 5, 6, 7, 8]
num = [3(posição)] = 6(valor) acrescenta um valor no vetor
num.push(valor) acrescenta um valor na ultima posição
num.length monstra a quatidade de elementos em um vetor
num.sort() faz os elementos ficarem em ordem crescente
num.indexOf(7(valor)) mostra a posição do valor

fo(pos(indice) in num(array)){} é usada para array e objetos